/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.77.0
  Forc version: 0.51.1
  Fuel-Core version: 0.22.1
*/

import type {
  BigNumberish,
  BN,
  BytesLike,
  Contract,
  DecodedValue,
  FunctionFragment,
  Interface,
  InvokeFunction,
} from "fuels";

export type Enum<T, U = { [K in keyof T]: Pick<T, K> }> = Partial<T> &
  U[keyof U];

/*
    Mimics Sway Option and Vectors.
    Vectors are treated like arrays in Typescript.
  */
export type Option<T> = T | undefined;

export type Vec<T> = T[];
export type DecodedEvent = OpenOrderEvent | CancelOrderEvent | TradeOrderEvent | MatchOrderEvent;
export enum Error {
  AccessDenied = "AccessDenied",
  NoOrdersFound = "NoOrdersFound",
  NoMarketFound = "NoMarketFound",
  OrdersCantBeMatched = "OrdersCantBeMatched",
  FirstArgumentShouldBeOrderSellSecondOrderBuy = "FirstArgumentShouldBeOrderSellSecondOrderBuy",
  ZeroAssetAmountToSend = "ZeroAssetAmountToSend",
  MarketAlreadyExists = "MarketAlreadyExists",
  BadAsset = "BadAsset",
  BadValue = "BadValue",
  BadPrice = "BadPrice",
  BaseSizeIsZero = "BaseSizeIsZero",
  CannotRemoveOrderIndex = "CannotRemoveOrderIndex",
  CannotRemoveOrderByTrader = "CannotRemoveOrderByTrader",
  CannotRemoveOrder = "CannotRemoveOrder",
}

export type Identity = Enum<{
  Address: Address;
  ContractId: ContractId;
}>;

export enum AssetType {
  Base,
  Quote,
}

export enum OrderType {
  Buy,
  Sell,
}

export enum ReentrancyError {
  NonReentrant = "NonReentrant",
}

export type Address = { value: string };
export type AssetId = { value: string };
export type ContractId = { value: string };
export type I64 = { value: BigNumberish; negative: boolean };
export type Market = {
  asset_id: AssetId;
  asset_decimals: BigNumberish;
};

export type Order = {
  amount: BigNumberish;
  asset_type: AssetType;
  order_type: OrderType;
  owner: Identity;
  price: BigNumberish;
  block_height: BigNumberish
};

export type TradeOrderEvent = {
  base_sell_order_id: string;
  base_buy_order_id: string;
  order_matcher: Identity;
  trade_size: BigNumberish;
  trade_price: BigNumberish;
  block_height: BigNumberish;
  tx_id: string;
};

export type OpenOrderEvent = {
  amount: BigNumberish;
  asset: AssetId;
  asset_type: AssetType;
  order_type: OrderType;
  order_id: string;
  price: BigNumberish;
  user: Identity;
};

export type CancelOrderEvent = {
  order_id: string;
};

export type MatchOrderEvent = {
  order_id: string;
  asset: AssetId;
  order_matcher: Identity;
  owner: Identity;
  counterparty: Identity;
  match_size: BigNumberish;
  match_price: BigNumberish;
};

export type OrderbookAbiConfigurables = {
  BASE_ASSET: AssetId;
  BASE_ASSET_DECIMALS: BigNumberish;
  OWNER: Address;
  PRICE_DECIMALS: BigNumberish;
  QUOTE_ASSET: AssetId;
  QUOTE_ASSET_DECIMALS: BigNumberish;
};

interface OrderbookAbiInterface extends Interface {
  functions: {
    cancel_order: FunctionFragment;
    create_market: FunctionFragment;
    get_configurables: FunctionFragment;
    get_market_by_id: FunctionFragment;
    get_order_change_events_by_order: FunctionFragment;
    market_exists: FunctionFragment;
    match_orders: FunctionFragment;
    open_order: FunctionFragment;
    order_by_id: FunctionFragment;
    orders_by_trader: FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "cancel_order",
    values: [string]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "create_market",
    values: [AssetId, BigNumberish]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "get_configurables",
    values: []
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "get_market_by_id",
    values: [AssetId]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "get_order_change_events_by_order",
    values: [string]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "market_exists",
    values: [AssetId]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "match_orders",
    values: [string, string]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "open_order",
    values: [AssetId, I64, BigNumberish]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "order_by_id",
    values: [string]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "orders_by_trader",
    values: [Address]
  ): Uint8Array;

  decodeFunctionData(
    functionFragment: "cancel_order",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "create_market",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_configurables",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_market_by_id",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_order_change_events_by_order",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "market_exists",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "match_orders",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "open_order",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "order_by_id",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "orders_by_trader",
    data: BytesLike
  ): DecodedValue;
}

export const abi = {
  "encoding": "1",
  "types": [
    {
      "typeId": 0,
      "type": "()",
      "components": [],
      "typeParameters": null
    },
    {
      "typeId": 1,
      "type": "(_, _)",
      "components": [
        {
          "name": "__tuple_element",
          "type": 35,
          "typeArguments": null
        },
        {
          "name": "__tuple_element",
          "type": 35,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 2,
      "type": "(_, _)",
      "components": [
        {
          "name": "__tuple_element",
          "type": 4,
          "typeArguments": null
        },
        {
          "name": "__tuple_element",
          "type": 4,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 3,
      "type": "(_, _, _, _, _, _)",
      "components": [
        {
          "name": "__tuple_element",
          "type": 19,
          "typeArguments": null
        },
        {
          "name": "__tuple_element",
          "type": 20,
          "typeArguments": null
        },
        {
          "name": "__tuple_element",
          "type": 34,
          "typeArguments": null
        },
        {
          "name": "__tuple_element",
          "type": 20,
          "typeArguments": null
        },
        {
          "name": "__tuple_element",
          "type": 34,
          "typeArguments": null
        },
        {
          "name": "__tuple_element",
          "type": 34,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 4,
      "type": "b256",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 5,
      "type": "enum AccountError",
      "components": [
        {
          "name": "InsufficientBalance",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 6,
      "type": "enum AssetError",
      "components": [
        {
          "name": "InvalidAsset",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 7,
      "type": "enum AssetType",
      "components": [
        {
          "name": "Base",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "Quote",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 8,
      "type": "enum AuthError",
      "components": [
        {
          "name": "Unauthorized",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 9,
      "type": "enum Identity",
      "components": [
        {
          "name": "Address",
          "type": 19,
          "typeArguments": null
        },
        {
          "name": "ContractId",
          "type": 23,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 10,
      "type": "enum MatchError",
      "components": [
        {
          "name": "CantMatch",
          "type": 2,
          "typeArguments": null
        },
        {
          "name": "CantMatchMany",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "CantFulfillMany",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 11,
      "type": "enum Option",
      "components": [
        {
          "name": "None",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "Some",
          "type": 16,
          "typeArguments": null
        }
      ],
      "typeParameters": [
        16
      ]
    },
    {
      "typeId": 12,
      "type": "enum OrderChangeType",
      "components": [
        {
          "name": "OrderOpened",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "OrderCancelled",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "OrderMatched",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 13,
      "type": "enum OrderError",
      "components": [
        {
          "name": "OrderNotFound",
          "type": 4,
          "typeArguments": null
        },
        {
          "name": "PriceTooSmall",
          "type": 1,
          "typeArguments": null
        },
        {
          "name": "ZeroOrderAmount",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "ZeroLockAmount",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "FailedToRemove",
          "type": 4,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 14,
      "type": "enum OrderType",
      "components": [
        {
          "name": "Buy",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "Sell",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 15,
      "type": "enum ValueError",
      "components": [
        {
          "name": "InvalidAmount",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "InvalidSlippage",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "InvalidArrayLength",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 16,
      "type": "generic T",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 17,
      "type": "raw untyped ptr",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 18,
      "type": "struct Account",
      "components": [
        {
          "name": "liquid",
          "type": 21,
          "typeArguments": null
        },
        {
          "name": "locked",
          "type": 21,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 19,
      "type": "struct Address",
      "components": [
        {
          "name": "bits",
          "type": 4,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 20,
      "type": "struct AssetId",
      "components": [
        {
          "name": "bits",
          "type": 4,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 21,
      "type": "struct Balance",
      "components": [
        {
          "name": "base",
          "type": 35,
          "typeArguments": null
        },
        {
          "name": "quote",
          "type": 35,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 22,
      "type": "struct CancelOrderEvent",
      "components": [
        {
          "name": "order_id",
          "type": 4,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 23,
      "type": "struct ContractId",
      "components": [
        {
          "name": "bits",
          "type": 4,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 24,
      "type": "struct DepositEvent",
      "components": [
        {
          "name": "amount",
          "type": 35,
          "typeArguments": null
        },
        {
          "name": "asset",
          "type": 20,
          "typeArguments": null
        },
        {
          "name": "user",
          "type": 9,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 25,
      "type": "struct MatchOrderEvent",
      "components": [
        {
          "name": "order_id",
          "type": 4,
          "typeArguments": null
        },
        {
          "name": "asset",
          "type": 20,
          "typeArguments": null
        },
        {
          "name": "order_matcher",
          "type": 9,
          "typeArguments": null
        },
        {
          "name": "owner",
          "type": 9,
          "typeArguments": null
        },
        {
          "name": "counterparty",
          "type": 9,
          "typeArguments": null
        },
        {
          "name": "match_size",
          "type": 35,
          "typeArguments": null
        },
        {
          "name": "match_price",
          "type": 35,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 26,
      "type": "struct OpenOrderEvent",
      "components": [
        {
          "name": "amount",
          "type": 35,
          "typeArguments": null
        },
        {
          "name": "asset",
          "type": 20,
          "typeArguments": null
        },
        {
          "name": "asset_type",
          "type": 7,
          "typeArguments": null
        },
        {
          "name": "order_type",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "order_id",
          "type": 4,
          "typeArguments": null
        },
        {
          "name": "price",
          "type": 35,
          "typeArguments": null
        },
        {
          "name": "user",
          "type": 9,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 27,
      "type": "struct Order",
      "components": [
        {
          "name": "amount",
          "type": 35,
          "typeArguments": null
        },
        {
          "name": "asset_type",
          "type": 7,
          "typeArguments": null
        },
        {
          "name": "order_type",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "owner",
          "type": 9,
          "typeArguments": null
        },
        {
          "name": "price",
          "type": 35,
          "typeArguments": null
        },
        {
          "name": "block_height",
          "type": 34,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 28,
      "type": "struct OrderChangeInfo",
      "components": [
        {
          "name": "change_type",
          "type": 12,
          "typeArguments": null
        },
        {
          "name": "block_height",
          "type": 34,
          "typeArguments": null
        },
        {
          "name": "sender",
          "type": 9,
          "typeArguments": null
        },
        {
          "name": "tx_id",
          "type": 4,
          "typeArguments": null
        },
        {
          "name": "amount_before",
          "type": 35,
          "typeArguments": null
        },
        {
          "name": "amount_after",
          "type": 35,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 29,
      "type": "struct RawVec",
      "components": [
        {
          "name": "ptr",
          "type": 17,
          "typeArguments": null
        },
        {
          "name": "cap",
          "type": 35,
          "typeArguments": null
        }
      ],
      "typeParameters": [
        16
      ]
    },
    {
      "typeId": 30,
      "type": "struct SetFeeEvent",
      "components": [
        {
          "name": "amount",
          "type": 35,
          "typeArguments": null
        },
        {
          "name": "user",
          "type": 11,
          "typeArguments": [
            {
              "name": "",
              "type": 9,
              "typeArguments": null
            }
          ]
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 31,
      "type": "struct TradeOrderEvent",
      "components": [
        {
          "name": "base_sell_order_id",
          "type": 4,
          "typeArguments": null
        },
        {
          "name": "base_buy_order_id",
          "type": 4,
          "typeArguments": null
        },
        {
          "name": "order_matcher",
          "type": 9,
          "typeArguments": null
        },
        {
          "name": "trade_size",
          "type": 35,
          "typeArguments": null
        },
        {
          "name": "trade_price",
          "type": 35,
          "typeArguments": null
        },
        {
          "name": "block_height",
          "type": 34,
          "typeArguments": null
        },
        {
          "name": "tx_id",
          "type": 4,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 32,
      "type": "struct Vec",
      "components": [
        {
          "name": "buf",
          "type": 29,
          "typeArguments": [
            {
              "name": "",
              "type": 16,
              "typeArguments": null
            }
          ]
        },
        {
          "name": "len",
          "type": 35,
          "typeArguments": null
        }
      ],
      "typeParameters": [
        16
      ]
    },
    {
      "typeId": 33,
      "type": "struct WithdrawEvent",
      "components": [
        {
          "name": "amount",
          "type": 35,
          "typeArguments": null
        },
        {
          "name": "asset",
          "type": 20,
          "typeArguments": null
        },
        {
          "name": "user",
          "type": 9,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 34,
      "type": "u32",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 35,
      "type": "u64",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "order_id",
          "type": 4,
          "typeArguments": null
        }
      ],
      "name": "cancel_order",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "deposit",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "payable",
          "arguments": []
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "amount",
          "type": 35,
          "typeArguments": null
        },
        {
          "name": "asset_type",
          "type": 7,
          "typeArguments": null
        },
        {
          "name": "order_type",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "price",
          "type": 35,
          "typeArguments": null
        },
        {
          "name": "slippage",
          "type": 35,
          "typeArguments": null
        },
        {
          "name": "orders",
          "type": 32,
          "typeArguments": [
            {
              "name": "",
              "type": 4,
              "typeArguments": null
            }
          ]
        }
      ],
      "name": "fulfill_order_many",
      "output": {
        "name": "",
        "type": 4,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "orders",
          "type": 32,
          "typeArguments": [
            {
              "name": "",
              "type": 4,
              "typeArguments": null
            }
          ]
        }
      ],
      "name": "match_order_many",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "order0_id",
          "type": 4,
          "typeArguments": null
        },
        {
          "name": "order1_id",
          "type": 4,
          "typeArguments": null
        }
      ],
      "name": "match_order_pair",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "amount",
          "type": 35,
          "typeArguments": null
        },
        {
          "name": "asset_type",
          "type": 7,
          "typeArguments": null
        },
        {
          "name": "order_type",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "price",
          "type": 35,
          "typeArguments": null
        }
      ],
      "name": "open_order",
      "output": {
        "name": "",
        "type": 4,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "amount",
          "type": 35,
          "typeArguments": null
        },
        {
          "name": "user",
          "type": 11,
          "typeArguments": [
            {
              "name": "",
              "type": 9,
              "typeArguments": null
            }
          ]
        }
      ],
      "name": "set_fee",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "amount",
          "type": 35,
          "typeArguments": null
        },
        {
          "name": "asset_type",
          "type": 7,
          "typeArguments": null
        }
      ],
      "name": "withdraw",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "user",
          "type": 9,
          "typeArguments": null
        }
      ],
      "name": "account",
      "output": {
        "name": "",
        "type": 11,
        "typeArguments": [
          {
            "name": "",
            "type": 18,
            "typeArguments": null
          }
        ]
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "config",
      "output": {
        "name": "",
        "type": 3,
        "typeArguments": null
      },
      "attributes": null
    },
    {
      "inputs": [
        {
          "name": "user",
          "type": 11,
          "typeArguments": [
            {
              "name": "",
              "type": 9,
              "typeArguments": null
            }
          ]
        }
      ],
      "name": "fee",
      "output": {
        "name": "",
        "type": 35,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "order",
          "type": 4,
          "typeArguments": null
        }
      ],
      "name": "order",
      "output": {
        "name": "",
        "type": 11,
        "typeArguments": [
          {
            "name": "",
            "type": 27,
            "typeArguments": null
          }
        ]
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "order_id",
          "type": 4,
          "typeArguments": null
        }
      ],
      "name": "order_change_info",
      "output": {
        "name": "",
        "type": 32,
        "typeArguments": [
          {
            "name": "",
            "type": 28,
            "typeArguments": null
          }
        ]
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "asset_type",
          "type": 7,
          "typeArguments": null
        },
        {
          "name": "order_type",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "owner",
          "type": 9,
          "typeArguments": null
        },
        {
          "name": "price",
          "type": 35,
          "typeArguments": null
        },
        {
          "name": "block_height",
          "type": 34,
          "typeArguments": null
        }
      ],
      "name": "order_id",
      "output": {
        "name": "",
        "type": 4,
        "typeArguments": null
      },
      "attributes": null
    },
    {
      "inputs": [
        {
          "name": "user",
          "type": 9,
          "typeArguments": null
        }
      ],
      "name": "user_orders",
      "output": {
        "name": "",
        "type": 32,
        "typeArguments": [
          {
            "name": "",
            "type": 4,
            "typeArguments": null
          }
        ]
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [
    {
      "logId": "999626799421532101",
      "loggedType": {
        "name": "",
        "type": 13,
        "typeArguments": []
      }
    },
    {
      "logId": "487470194140633944",
      "loggedType": {
        "name": "",
        "type": 8,
        "typeArguments": []
      }
    },
    {
      "logId": "15329379498675066312",
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": "14676650066558707344",
      "loggedType": {
        "name": "",
        "type": 22,
        "typeArguments": []
      }
    },
    {
      "logId": "4038555509566971562",
      "loggedType": {
        "name": "",
        "type": 15,
        "typeArguments": []
      }
    },
    {
      "logId": "16169998749359270814",
      "loggedType": {
        "name": "",
        "type": 6,
        "typeArguments": []
      }
    },
    {
      "logId": "12590297951544646752",
      "loggedType": {
        "name": "",
        "type": 24,
        "typeArguments": []
      }
    },
    {
      "logId": "7812135309850120461",
      "loggedType": {
        "name": "",
        "type": 26,
        "typeArguments": []
      }
    },
    {
      "logId": "2271581833574730066",
      "loggedType": {
        "name": "",
        "type": 25,
        "typeArguments": []
      }
    },
    {
      "logId": "18305104039093136274",
      "loggedType": {
        "name": "",
        "type": 31,
        "typeArguments": []
      }
    },
    {
      "logId": "15838754841496526215",
      "loggedType": {
        "name": "",
        "type": 10,
        "typeArguments": []
      }
    },
    {
      "logId": "14995717719734047951",
      "loggedType": {
        "name": "",
        "type": 30,
        "typeArguments": []
      }
    },
    {
      "logId": "10918704871079408520",
      "loggedType": {
        "name": "",
        "type": 33,
        "typeArguments": []
      }
    }
  ],
  "messagesTypes": [],
  "configurables": [
    {
      "name": "BASE_ASSET",
      "configurableType": {
        "name": "",
        "type": 20,
        "typeArguments": []
      },
      "offset": 79112
    },
    {
      "name": "BASE_ASSET_DECIMALS",
      "configurableType": {
        "name": "",
        "type": 34,
        "typeArguments": null
      },
      "offset": 78960
    },
    {
      "name": "OWNER",
      "configurableType": {
        "name": "",
        "type": 19,
        "typeArguments": []
      },
      "offset": 79048
    },
    {
      "name": "PRICE_DECIMALS",
      "configurableType": {
        "name": "",
        "type": 34,
        "typeArguments": null
      },
      "offset": 78976
    },
    {
      "name": "QUOTE_ASSET",
      "configurableType": {
        "name": "",
        "type": 20,
        "typeArguments": []
      },
      "offset": 79144
    },
    {
      "name": "QUOTE_ASSET_DECIMALS",
      "configurableType": {
        "name": "",
        "type": 34,
        "typeArguments": null
      },
      "offset": 78984
    }
  ]
}
