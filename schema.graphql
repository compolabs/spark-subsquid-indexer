enum OrderType {
  Sell
  Buy
}

enum OrderStatus {
  Active
  Closed
  Canceled
}

enum AssetType {
  Base
  Quote
}

type OpenOrderEvent @entity {
  id: ID!
  orderId: String! @index
  txId: String!
  asset: String!
  amount: BigInt!
  assetType: AssetType!
  orderType: OrderType!
  price: BigInt!
  user: String!
  timestamp: String!
}

type MatchOrderEvent @entity {
  id: ID!
  orderId: String! @index
  txId: String!
  asset: String!
  orderMatcher: String!
  owner: String!
  counterparty: String!
  matchSize: BigInt!
  matchPrice: BigInt!
  timestamp: String!
}

type Order @entity {
  id: ID!
  asset: String! @index
  amount: BigInt!
  assetType: AssetType!
  orderType: OrderType! @index
  price: BigInt! @index
  user: String! @index
  status: OrderStatus! @index # order status
  initialAmount: BigInt! # initial order amount
  timestamp: String!
}

type CancelOrderEvent @entity {
  id: ID!
  orderId: String! @index
  txId: String!
  timestamp: String!
}

type TradeOrderEvent @entity {
  id: ID!
  baseSellOrderId: String! @index
  baseBuyOrderId: String! @index
  txId: String! @index
  orderMatcher: String! @index
  tradeSize: BigInt! @index
  tradePrice: BigInt! @index
  # block_height: BigInt! @index
  timestamp: String!
}

type DepositEvent @entity {
  id: ID!
  txId: String! @index
  amount: BigInt!
  asset: String! @index
  user: String! @index
  timestamp: String!
}

type WithdrawEvent @entity {
  id: ID!
  txId: String! @index
  amount: BigInt!
  asset: String! @index
  user: String! @index
  timestamp: String!
}

type Balance @entity {
  id: ID!
  amount: BigInt!
  asset: String! @index
  user: String! @index
}
